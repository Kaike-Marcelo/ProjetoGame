#BlueJ class context
comment0.target=Chefe
comment1.params=vida\ forca
comment1.target=Chefe(int,\ int)
comment10.params=
comment10.target=void\ estadoParadoEsq()
comment11.params=
comment11.target=void\ estadoAtacandoDir()
comment12.params=
comment12.target=void\ estadoAtacandoEsq()
comment13.params=
comment13.target=int\ pegarVida()
comment13.text=\r\n\ Pegar\ e\ Definir\r\n
comment14.params=
comment14.target=int\ pegarLadoEsquerdo()
comment15.params=
comment15.target=int\ pegarLadoDireito()
comment16.params=estaNaEsquerda
comment16.target=void\ definirEstaNaEsquerda(boolean)
comment17.params=
comment17.target=boolean\ tempoEspera()
comment18.params=
comment18.target=boolean\ tempoAtaque()
comment19.params=
comment19.target=void\ gravidade()
comment19.text=\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ definirValorTempo()\ {\r\n\ \ \ \ \ \ \ \ this.valorTempo\ \=\ valorTempo;\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ controlarInvocacao(int\ qnt,\ int\ qntChancesInvocarInimigos)\ {\r\n\ \ \ \ \ \ \ \ this.qnt\ \=\ qnt;\r\n\ \ \ \ \ \ \ \ this.qntChancesInvocarInimigos\ \=\ qntChancesInvocarInimigos;\r\n\ \ \ \ }\r\n\r\n\ \ \ \ public\ void\ acao()\ {\r\n\ \ \ \ \ \ \ \ if\ (tempoDeEspera\ >\ 0)\ {\ //\ Se\ for\ >\ 0,\ significa\ que\ ele\ est\u00E1\ parado\r\n\ \ \ \ \ \ \ \ \ \ \ \ tempoDeEspera--;\r\n\ \ \ \ \ \ \ \ \ \ \ \ navegando\ \=\ false;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (invocacoes\ <\ qnt)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ invocarInimigo();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ invocacoes++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ invocacoes\ \=\ 0;\r\n\ \ \ \ \ \ \ \ }\r\n\r\n\ \ \ \ \ \ \ \ if\ (tempoDeEspera\ <\=\ 0)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ navegando\ \=\ true;\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (ladoEsquerdo)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ moverParaDireita();\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ moverParaEsquerda();\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n\ \ \ \ \r\n\ \ \ \ public\ void\ moverParaEsquerda()\ {\r\n\ \ \ \ \ \ \ \ if\ (getX()\ >\ distanciaBordaX)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ move(-velocidadeX);\r\n\ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ ladoEsquerdo\ \=\ true;\r\n\ \ \ \ \ \ \ \ \ \ \ \ tempoDeEspera\ \=\ valorTempo;\r\n\ \ \ \ \ \ \ \ \ \ \ \ //setRotation(180);\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\r\n\r\n\ \ \ \ public\ void\ moverParaDireita()\ {\r\n\ \ \ \ \ \ \ \ if\ (getX()\ <\ (getWorld().getWidth())\ -\ distanciaBordaX)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ move(velocidadeX);\r\n\ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ ladoEsquerdo\ \=\ false;\r\n\ \ \ \ \ \ \ \ \ \ \ \ tempoDeEspera\ \=\ valorTempo;\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ }\ \r\n\ \ \ \ \r\n\ \ \ \ public\ void\ definirVelocidade(int\ velocidadeX)\ {\r\n\ \ \ \ \ \ \ \ this.velocidadeX\ \=\ velocidadeX;\r\n\ \ \ \ }\r\n\r\n\ \ \ \ public\ void\ definirTempoDeEspera(int\ valorTempo)\ {\r\n\ \ \ \ \ \ \ \ this.valorTempo\ \=\ valorTempo;\r\n}
comment2.params=world
comment2.target=void\ addedToWorld(greenfoot.World)
comment2.text=\r\n\ Adiciona\ objetos\ referentes\ ao\ Chefe\ no\ mundo\r\n
comment20.params=
comment20.target=boolean\ noChao()
comment21.params=
comment21.target=void\ ativarModoPacifico()
comment22.params=
comment22.target=void\ desativarModoPacifico()
comment3.params=
comment3.target=void\ act()
comment4.params=
comment4.target=void\ verificarColisoesComJogadores()
comment4.text=\r\n\ Verifica\ se\ o\ Chefe\ colidiu\ com\ o\ Jogador\ e\ dar\ dano\ neles\r\n
comment5.params=dano
comment5.target=void\ receberAtaque(int)
comment5.text=\r\n\ Recebe\ dano\r\n
comment6.params=
comment6.target=void\ ficarImune()
comment7.params=
comment7.target=void\ tornarVulneravel()
comment8.params=
comment8.target=void\ animChefe()
comment8.text=\r\n\ Maquina\ de\ Estado\r\n
comment9.params=
comment9.target=void\ estadoParadoDir()
numComments=23
